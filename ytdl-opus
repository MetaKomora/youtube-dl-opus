#!/bin/bash
#
# ytdl-opus - Download and convert audio from youtube videos to .opus format
#
# Author: Mateus Martins (MetaKomora)
#

function audioMaxQuality(){

    # Copy audio content from webm to opus and report log to a file
    ffmpeg -report -i "$1" -c copy "$2" -y;
    audioQuality="128K";
    verification "$1" "$2" "$audioQuality";
}

function audioDefaultQuality() {
    
    # Convert from webm to opus and report log to a file
    ffmpeg -report -i "$1" -b:a 96K "$2" -y;
    audioQuality="96K";
    verification "$1" "$2" "$audioQuality";
}

function verification(){

    # grep the report file to look for errors and assign to a variable
    answer=$(grep "File ended prematurely at pos" ffmpeg*);

    # If $answer is empty the conversion did well, if not, download with m4a alternative and convert from it
    if [ -z "$answer" ]; then
        successClean "$1";
    else
        alternativeMethod "$1" "$2" "$3";
    fi
}

function alternativeMethod() {

    printf "\n\n\e[033;1m######## conversion failed, using alternative method ########\e[m\n\n\n"; sleep 2;

    # Remove the .webm and ffmpeg files
    rm "$HOME/audio downloads/$1";
    rm "$HOME/audio downloads/"ffmpeg-*;

    # Removing cache and downloading audio m4a
    youtube-dl --rm-cache-dir -f 140 "$URL";

    # Changing $audioInput extension to .m4a
    audioInput="${1%.*}.m4a";

    # Convert audio to opus with bitrate choosen by user
    ffmpeg -i "$audioInput" -b:a "$3" "$2" -y;

    # After conversion, remove the .m4a file
    rm "$HOME/audio downloads/$audioInput";

    printf "\n\n\e[032;1m######## Download and conversion completed ########\e[m\n\n";   
}

function successClean(){
    # after conversion, remove .webm and ffmpeg files
    rm "$HOME/audio downloads/$1";
    rm "$HOME/audio downloads/"ffmpeg-*;

    printf "\n\n\e[032;1m######## Download and conversion completed without errors ########\e[m\n\n\n";
}

# Check if exists "audio downloads" directory on $HOME, if not, create it
[ -d "$HOME/audio downloads/" ] || mkdir "$HOME/audio downloads/";

# Change directory
cd "$HOME/audio downloads/" || { printf "\n\n\e[031;1m######## Failed to enter directory %s ########\n######## Verify if it exists and create manually ########\e[m\n\n" "$HOME/audio downloads/"; exit 1; }

# receives video URL and assign to a variable
URL="$1";

# Assign to a variable the $URL filename
audioInput=$(youtube-dl --get-filename "$URL") || { printf "\n\n\e[031;1m######## Failed to retrieve audio filename ########\e[m\n\n"; exit 1; }

# Assign extensions to audio conversion process
audioInput="${audioInput%.*}.webm";
audioOutput="${audioInput%.*}.opus";

# Removin cache and downloading audio
youtube-dl --rm-cache-dir -f 251 "$URL";

# Asks user about bitrate
printf "\n\n\e[034;1m######## Do you want the best audio quality available? (y|n) ########\e[m\n";
read -r answerQuality;

printf "\n";

# If $answerQuality is y|Y, the audio quality will be set to the best
if [ "$answerQuality" == "y" ] || [ "$answerQuality" == "Y" ]; then
    audioMaxQuality "$audioInput" "$audioOutput";
else
    audioDefaultQuality "$audioInput" "$audioOutput";
fi
